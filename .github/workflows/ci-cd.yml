name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js for Backend
        uses: actions/setup-node@v3
        with:
          node-version: 18
          working-directory: ./backend

      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: 18
          working-directory: ./frontend

      # Step 3: Install dependencies
      - name: Install Backend Dependencies
        run: npm install
        working-directory: ./backend

      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./frontend

      # Step 4: Run tests (if you have any)
      - name: Run Backend Tests
        run: npm test
        working-directory: ./backend

      # Step 5: Build the frontend
      - name: Build Frontend
        run: npm run build
        working-directory: ./frontend

      # Step 6: Deploy using Docker Compose
      - name: Deploy with Docker Compose
        run: docker-compose up --build -d
